{"version":3,"sources":["Pokemon/PokemonMain.module.css","Pokemon/PokemonCard.module.css","Pokemon/PokemonDetails.module.css","Pokemon/PokemonCard.js","Pokemon/PokemonDetails.js","Components/LoadButtons.js","Components/Dropdown.js","Pokemon/PokemonMain.js","App.js","serviceWorker.js","index.js","App.module.css"],"names":["module","exports","COLOR_MAP","PokemonCard","props","types","map","type","Label","className","styles","key","name","color","Card","onClick","id","active","Ribbon","as","ribbon","ImageWrapper","src","image","alt","InfoWrapper","Name","PokemonDetails","activeCard","sprites","stats","weight","moves","Details","DetailsCard","front_default","toString","padStart","TableWrapper","Table","celled","compact","textAlign","Header","Row","HeaderCell","Body","stat","Cell","base_stat","length","LoadButtons","isPrevDisabled","pokemonList","previous","isNextDisabled","next","Buttons","disabled","onLoadOther","aria-hidden","Dropdown","options","option","value","charAt","toUpperCase","slice","DropdownWrapper","htmlFor","onChange","dropdownChangeHandler","useState","React","useEffect","PokemonMain","loadingInfo","setLoadingInfo","setPokemonList","pokemonData","setPokemonData","dropdownData","setDropdownData","dropdownValue","setDropdownValue","activeCardID","setActiveCardID","fetchPokemonData","url","a","axios","get","pokemonListResponse","data","results","forEach","item","split","pokemonInfoArray","Promise","all","then","responses","response","pokemonInfoResponse","dropdownTypes","Set","pokemon","flat","console","log","finally","onShowInfoHandler","pokemonID","List","Loader","filter","some","isActive","Fragment","event","target","ListWrapper","direction","find","App","Content","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.20a35754.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropdownWrapper\":\"PokemonMain_DropdownWrapper__2Dt_T\",\"List\":\"PokemonMain_List__27xw4\",\"ListWrapper\":\"PokemonMain_ListWrapper__Hj1yR\",\"Buttons\":\"PokemonMain_Buttons__QJ8_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"PokemonCard_Card__3V-5s\",\"ImageWrapper\":\"PokemonCard_ImageWrapper__1DDGz\",\"InfoWrapper\":\"PokemonCard_InfoWrapper__1Zc0n\",\"Name\":\"PokemonCard_Name__3sv5n\",\"Ribbon\":\"PokemonCard_Ribbon__3oJGR\",\"Label\":\"PokemonCard_Label__3nNW8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Details\":\"PokemonDetails_Details__gYRe8\",\"DetailsCard\":\"PokemonDetails_DetailsCard__zKcv9\",\"ImageWrapper\":\"PokemonDetails_ImageWrapper__1dAyA\",\"Name\":\"PokemonDetails_Name__3qr0h\",\"TableWrapper\":\"PokemonDetails_TableWrapper__hX88g\",\"Table\":\"PokemonDetails_Table__3OUEb\"};","import React from 'react';\nimport { Label } from 'semantic-ui-react'\nimport styles from './PokemonCard.module.css';\n\nconst COLOR_MAP = {\n  'grass': 'green',\n  'poison': 'purple',\n  'fire': 'orange',\n  'water': 'blue',\n  'flying': 'teal',\n  'bug': 'olive',\n  'normal': 'grey',\n  'fairy': 'pink',\n  'ground': 'brown',\n  'fighting': 'black',\n  'electric': 'yellow',\n  'psychic': 'red',\n  'ice': 'violet'\n}\n\nfunction PokemonCard(props) {\n  const types = props.types.map(type => (\n    <Label className={styles.Label} key={props.name+type.type.name} color={COLOR_MAP[type.type.name]}>{type.type.name}</Label>\n  ))\n\n  return (\n    <div className={styles.Card} onClick={() => props.onClick(props.id)}>\n      {props.active && <Label className={styles.Ribbon} as='span' color='teal' ribbon>Selected</Label>}\n\n      <div className={styles.ImageWrapper}>\n        <img src={props.image} alt={props.name + ' image'} />\n      </div>\n\n      <div className={styles.InfoWrapper}>\n        <p className={styles.Name}>{ props.name }</p>\n        { types }\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonCard;","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport styles from './PokemonDetails.module.css';\n\nfunction PokemonDetails(props) {\n  const { sprites, name, id, stats, weight, moves } = props.activeCard;\n\n  return (\n    <div className={styles.Details}>\n\n      <div className={styles.DetailsCard}>\n        <div className={styles.ImageWrapper}>\n          <img src={sprites.front_default} alt={name + ' image'} />\n        </div>\n\n        <div>\n          <p className={styles.Name}>{ name } #{id.toString().padStart(3, '0')}</p>\n\n          <div className={styles.TableWrapper}>\n            <Table className={styles.Table} celled compact textAlign='center'>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Type</Table.HeaderCell>\n                  <Table.HeaderCell>Fire</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n                {stats.map(stat => {\n                  if (stat.stat.name ==='hp') stat.stat.name = 'HP';\n                  if (stat.stat.name ==='special-attack') stat.stat.name = 'SP Attack';\n                  if (stat.stat.name ==='special-defense') stat.stat.name = 'SP Defense';\n\n                  return (\n                    <Table.Row key={stat.stat.name}>\n                      <Table.Cell>{ stat.stat.name }</Table.Cell>\n                      <Table.Cell>{ stat.base_stat }</Table.Cell>\n                    </Table.Row>\n                  )\n                })}\n                <Table.Row>\n                  <Table.Cell>Weight</Table.Cell>\n                  <Table.Cell>{ weight }</Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>Total Moves</Table.Cell>\n                  <Table.Cell>{ moves.length }</Table.Cell>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonDetails;","import React from 'react';\nimport styles from '../Pokemon/PokemonMain.module.css';\n\nfunction LoadButtons(props) {\n  const isPrevDisabled = !props.pokemonList.previous;\n  const isNextDisabled = !props.pokemonList.next;\n\n  return (\n    <div className={styles.Buttons}>\n      <button className=\"ui icon left labeled blue button\"\n              disabled={isPrevDisabled}\n              onClick={() => props.onLoadOther('previous')}>\n        <i aria-hidden=\"true\" className=\"left arrow icon\" />\n        Load Prev\n      </button>\n      <button className=\"ui icon right labeled blue button\"\n              disabled={isNextDisabled}\n              onClick={() => props.onLoadOther('next')}>\n        Load Next\n        <i aria-hidden=\"true\" className=\"right arrow icon\" />\n      </button>\n    </div>\n  )\n}\n\nexport default LoadButtons;","import React from 'react';\nimport styles from '../Pokemon/PokemonMain.module.css';\n\nfunction Dropdown(props) {\n  const options = props.options.map(option => (\n    <option key={option} value={option}>{ option.charAt(0).toUpperCase() + option.slice(1) }</option>\n  ))\n\n  return (\n    <div className={styles.DropdownWrapper}>\n      <label htmlFor=\"types\">Pokemon type:</label>\n      <select name=\"types\" id=\"types\" value={props.value} onChange={props.dropdownChangeHandler}>\n        { options }\n      </select>\n    </div>\n  )\n}\n\nexport default Dropdown;\n","import React from 'react';\nimport axios from 'axios'\nimport { Loader } from 'semantic-ui-react'\nimport PokemonCard from './PokemonCard';\nimport PokemonDetails from './PokemonDetails';\nimport LoadButtons from '../Components/LoadButtons';\nimport Dropdown from '../Components/Dropdown';\nimport styles from './PokemonMain.module.css';\n\nconst { useState, useEffect } = React;\n\nfunction PokemonMain() {\n  let [loadingInfo, setLoadingInfo] = useState('App Loading...'),\n      [pokemonList, setPokemonList] = useState(''),\n      [pokemonData, setPokemonData] = useState(''),\n      [dropdownData, setDropdownData] = useState(null),\n      [dropdownValue, setDropdownValue] = useState('all'),\n      [activeCardID, setActiveCardID] = useState(null);\n\n  const fetchPokemonData = async(url) => {\n    setLoadingInfo('Loading pokemons...');\n\n    try {\n      const pokemonListResponse = await axios.get(url);\n      pokemonListResponse.data.results.forEach(item => item.id = item.url.split('/').slice(-2, -1)[0]);\n      setPokemonList(pokemonListResponse.data);\n\n      setLoadingInfo('Loading pokemons info...');\n      const pokemonInfoArray = pokemonListResponse.data.results\n        .map(item => axios.get(`https://pokeapi.co/api/v1/pokemon/${item.id}`));\n      const pokemonInfoResponse = await Promise.all(pokemonInfoArray)\n        .then(responses => responses.map(response => response.data));\n      const dropdownTypes = ['all', ...new Set(pokemonInfoResponse\n        .map(pokemon => pokemon.types.map(type => type.type.name)).flat(1))];\n      setPokemonData(pokemonInfoResponse);\n      setDropdownData(dropdownTypes);\n    } catch(error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchPokemonData('https://pokeapi.co/api/v2/pokemon?limit=12').finally(() => setLoadingInfo(''));\n  }, []);\n\n  const onLoadOtherHandler = (direction) => {\n    fetchPokemonData(pokemonList[direction]).finally(() => setLoadingInfo(''));\n    setDropdownValue('all');\n    setActiveCardID(null);\n  }\n\n  const onShowInfoHandler = (pokemonID) => {\n    setActiveCardID(pokemonID);\n  }\n\n  const pokemonListGenerator = () => {\n    if (dropdownValue !== 'all') {\n      pokemonData = pokemonData\n        .filter(pokemon => pokemon.types\n          .some(type => type.type.name === dropdownValue));\n    }\n    return pokemonData.map(pokemon => {\n      const isActive = activeCardID === pokemon.id;\n\n      return (<PokemonCard key={pokemon.id}\n                           id={pokemon.id}\n                           image={pokemon.sprites.front_default}\n                           name={pokemon.name}\n                           types={pokemon.types}\n                           active={isActive}\n                           onClick={onShowInfoHandler}/>)\n    })\n  }\n\n  const dropdownChangeHandler = (event) => {\n    setActiveCardID(null);\n    setDropdownValue(event.target.value);\n  }\n\n  const List = loadingInfo ? <Loader active>{loadingInfo}</Loader> : pokemonListGenerator()\n\n  return (\n    <React.Fragment>\n      <div className={styles.List}>\n        { dropdownData && <Dropdown options={dropdownData}\n                                    value={dropdownValue}\n                                    dropdownChangeHandler={dropdownChangeHandler} /> }\n\n        <div className={styles.ListWrapper}>{ List }</div>\n\n        <LoadButtons pokemonList={pokemonList} onLoadOther={onLoadOtherHandler} />\n      </div>\n\n      { activeCardID && <PokemonDetails activeCard={pokemonData.find(item => item.id === activeCardID)} /> }\n    </React.Fragment>\n  )\n}\n\nexport default PokemonMain;","import React from 'react';\nimport PokemonMain from './Pokemon/PokemonMain';\nimport styles from './App.module.css';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <div className={styles.Header}>Pokedex</div>\n      <div className={styles.Content}>\n        <PokemonMain />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"App_Header__ZS1m2\",\"Content\":\"App_Content__ZaMNr\"};"],"sourceRoot":""}